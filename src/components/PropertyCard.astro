---
import type { CollectionEntry } from 'astro:content';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

interface Props {
  property: CollectionEntry<'properties'>;
}

const { property } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const basePath = lang === 'en' ? '/en' : '';

// Convert features to array for filtering
function getFeatures(features: any) {
  const featuresList = [];
  if (features.garage) featuresList.push('garage');
  if (features.pool) featuresList.push('pool');
  if (features.garden) featuresList.push('garden');
  return featuresList;
}

const formattedPrice = property.data.price.toLocaleString(lang === 'es' ? 'es-ES' : 'en-US', {
  style: 'currency',
  currency: 'EUR'
});
---

<article class="property-card"
  data-price={property.data.price}
  data-bedrooms={property.data.features.bedrooms}
  data-bathrooms={property.data.features.bathrooms}
  data-features={JSON.stringify(getFeatures(property.data.features))}
>
  <div class="image-container">
    <a href={`${basePath}/properties/${property.slug}`}>
      <img
        src={property.data.mainImage}
        alt={property.data.title}
        transition:name={property.slug}
        class="main-image"
      />
    </a>
    <div class="overlay">
      <span class="price">{formattedPrice}</span>
    </div>
  </div>
  
  <div class="content">
    <h3 class="title">{property.data.title}</h3>
    <p class="location">{property.data.location}</p>
    
    <div class="features">
      <span class="feature">
        <i class="fas fa-bed"></i>
        {property.data.features.bedrooms} hab.
      </span>
      <span class="feature">
        <i class="fas fa-bath"></i>
        {property.data.features.bathrooms} baños
      </span>
      <span class="feature">
        <i class="fas fa-ruler-combined"></i>
        {property.data.squareMeters}m²
      </span>
    </div>
    
    <p class="description">{property.data.description}</p>
    
    <div class="property-features">
      {property.data.features.pool && <span class="tag">Piscina</span>}
      {property.data.features.garden && <span class="tag">Jardín</span>}
      {property.data.features.garage && <span class="tag">Garaje</span>}
      {property.data.features.furnished && <span class="tag">Amueblado</span>}
    </div>
    
    <a href={`/properties/${property.slug}`} class="view-more">
      Ver más
    </a>
  </div>
</article>

<style>
  .property-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
  }

  .property-card:hover {
    transform: translateY(-5px);
  }

  .image-container {
    position: relative;
    padding-top: 66.67%; /* Aspect ratio 3:2 */
    overflow: hidden;
  }

  .main-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .property-card:hover .main-image {
    transform: scale(1.05);
  }

  .overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 1rem;
    background: linear-gradient(transparent, rgba(0,0,0,0.7));
  }

  .price {
    color: white;
    font-size: 1.25rem;
    font-weight: bold;
  }

  .content {
    padding: 1.5rem;
  }

  .title {
    margin: 0;
    font-size: 1.25rem;
    color: #333;
  }

  .location {
    color: #666;
    font-size: 0.9rem;
    margin: 0.5rem 0;
  }

  .features {
    display: flex;
    gap: 1rem;
    margin: 1rem 0;
  }

  .feature {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #666;
    font-size: 0.9rem;
  }

  .description {
    color: #444;
    font-size: 0.95rem;
    line-height: 1.5;
    margin: 1rem 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .property-features {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 1rem 0;
  }

  .tag {
    background: #f0f0f0;
    padding: 0.25rem 0.75rem;
    border-radius: 999px;
    font-size: 0.8rem;
    color: #666;
  }

  .view-more {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: rgb(var(--accent));
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.3s ease;
  }

  .view-more:hover {
    background: rgb(var(--accent-dark));
  }
</style>
