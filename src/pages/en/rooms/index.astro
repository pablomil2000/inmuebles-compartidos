---
import Layout from '../../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../../../i18n/utils';
import { getCollection } from 'astro:content';
import RoomFilters from '../../../components/RoomFilters.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const basePath = lang === 'en' ? '/en' : '';

const rooms = await getCollection('rooms');

// Convert room features to amenities array for filtering
function getAmenities(features: any) {
  const amenities = [];
  if (features.furnished) amenities.push('furnished');
  if (features.desk) amenities.push('desk');
  if (features.tv) amenities.push('tv');
  if (features.wifi) amenities.push('wifi');
  if (features.airConditioning) amenities.push('air_conditioning');
  if (features.heating) amenities.push('heating');
  return amenities;
}

// Map room types and bathroom types to their translation keys
const roomTypeMap = {
  individual: 'individual',
  doble: 'shared',
  suite: 'individual'
} as const;

const bathroomTypeMap = {
  privado: 'private_bathroom',
  compartido: 'shared_bathroom'
} as const;

type RoomTypeKey = keyof typeof roomTypeMap;
type BathroomTypeKey = keyof typeof bathroomTypeMap;
type FilterKey = keyof typeof t.filters;
---

<Layout title={t.nav.rooms}>
  <div class="rooms-container">
    <h1 class="title">{t.nav.rooms}</h1>
    
    <div class="rooms-layout">
      <aside class="filters">
        <RoomFilters />
      </aside>
      
      <div class="rooms-grid">
        {rooms.map((room) => {
          const roomType = roomTypeMap[room.data.features.type as RoomTypeKey] as FilterKey;
          const bathroomType = bathroomTypeMap[room.data.features.bathroom as BathroomTypeKey] as FilterKey;
          
          return (
            <article class="room-card"
              data-price={room.data.price}
              data-room-type={room.data.features.type}
              data-bathroom={room.data.features.bathroom}
              data-features={JSON.stringify(getAmenities(room.data.features))}
            >
              <a href={`${basePath}/rooms/${room.slug}`}>
                <img src={room.data.mainImage} alt={room.data.title} class="room-image">
                <div class="room-info">
                  <h2>{room.data.title}</h2>
                  <p class="price" data-price={room.data.price}>
                    {room.data.price.toLocaleString('es-ES', { style: 'currency', currency: 'EUR' })} /mes
                  </p>
                  <p class="location">{room.data.location}</p>
                  <div class="features">
                    <span class="feature">
                      <span class="feature-icon">üõèÔ∏è</span>
                      {t.filters[roomType]}
                    </span>
                    <span class="feature">
                      <span class="feature-icon">üöø</span>
                      {t.filters[bathroomType]}
                    </span>
                    <span class="feature">
                      <span class="feature-icon">üìè</span>
                      {room.data.squareMeters}m¬≤
                    </span>
                  </div>
                </div>
              </a>
            </article>
          );
        })}
      </div>
    </div>
  </div>
</Layout>

<style>
  .rooms-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .title {
    font-size: 2rem;
    color: #333;
    margin-bottom: 2rem;
  }

  .rooms-layout {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 2rem;
  }

  .filters {
    min-width: 250px;
  }

  .rooms-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .room-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .room-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .room-card a {
    text-decoration: none;
    color: inherit;
  }

  .room-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  .room-info {
    padding: 1.5rem;
  }

  .room-info h2 {
    margin: 0 0 1rem;
    font-size: 1.25rem;
    color: #333;
  }

  .price {
    font-size: 1.5rem;
    font-weight: bold;
    color: rgb(var(--accent));
    margin: 0.5rem 0;
  }

  .location {
    color: #666;
    margin: 0.5rem 0;
  }

  .features {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  .feature {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #666;
    font-size: 0.9rem;
  }

  .feature-icon {
    font-size: 1.2rem;
  }

  @media (max-width: 768px) {
    .rooms-layout {
      grid-template-columns: 1fr;
    }

    .rooms-container {
      padding: 1rem;
    }

    .rooms-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
